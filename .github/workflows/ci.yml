name: ci

on:
  pull_request:
    branches:
      - '**'
    paths-ignore:
      - "**/*.md"
  push: # run ci workflow so thats status badges can always point to main branch.
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  FORCE_COLOR: 3
  HUSKY: 0
  IS_UBUNTU: false
  NODE_VERSION: v0.0.0
  NPM_CACHE_DIR: ~/.npm
  NPM_VERSION: 0.0.0
  PNPM_STORE_PATH: .pnpm-store
  PNPM_VERSION: 0.0.0

jobs:
  lint:
    if: ${{ !contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.head_commit.message, 'chore(release)') }}
    env:
      IS_UBUNTU: ${{ contains(matrix.os, 'ubuntu') }}
    name: lint - ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 120
    strategy:
      matrix:
        os: [ubuntu-latest]
        target: [22.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Set node version to ${{ matrix.target }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.target }}

      - name: List versions
        run: |
          echo "NODE_VERSION=$(node -v)" >> $GITHUB_ENV
          echo "NPM_CACHE_DIR=$(npm config get cache)" >> $GITHUB_ENV
          echo "NPM_VERSION=$(npm -v)" >> $GITHUB_ENV
          echo "PNPM_STORE_PATH=$(pnpm store path)" >> $GITHUB_ENV
          echo "PNPM_VERSION=$(pnpm -v)" >> $GITHUB_ENV

          echo "${{ github.workflow }}-${{ github.ref || github.run_id }}"
          pwd
          ls -la
          which npm
          # npm x -y -- envinfo@latest

      - name: Cache dependencies
        id: pnpm-cache
        uses: actions/cache@v4
        with:
          # See this glob workaround at https://github.com/actions/toolkit/issues/713.
          path: |
            ${{ env.NPM_CACHE_DIR }}/*
            !${{ env.NPM_CACHE_DIR }}/_npx
            ${{ env.PNPM_STORE_PATH }}
          key: ${{ matrix.os }}-node-${{ env.NODE_VERSION }}-pnpm-${{ env.PNPM_VERSION }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-node-${{ env.NODE_VERSION }}-npm-${{ env.NPM_VERSION }}
            ${{ matrix.os }}-node-${{ env.NODE_VERSION }}-pnpm-${{ env.PNPM_VERSION }}

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: |
          pnpm pkg delete scripts.postinstall
          pnpm install --frozen-lockfile

      - name: Biome
        run: |
          pnpm biome.ci
